name: CI & CD

on:
  push:
    branches: [ "dev" ]
  # pull_request:
  #   branches: [ "dev" ]

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    # ÏßÑÏßú Ï†ÑÏó≠ Ï∫êÏãú (Î™®Îì† Î∏åÎûúÏπòÍ∞Ä Í≥µÏú†)
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-universal-cache
        restore-keys: |
          ${{ runner.os }}-docker-universal-cache
          
    # ÏùòÏ°¥ÏÑ± Î≥ÄÍ≤Ω Í∞êÏßÄ (ÏΩîÎìúÎßå Î∞îÎÄåÎ©¥ Ïä§ÌÇµ)
    - name: Check if rebuild needed
      id: check-rebuild
      run: |
        # DockerfileÏù¥ÎÇò requirements.txtÍ∞Ä Î∞îÎÄåÏóàÎäîÏßÄ ÌôïÏù∏
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
        else
          BASE_SHA="${{ github.event.before }}"
          HEAD_SHA="${{ github.sha }}"
        fi
        
        if git diff --name-only $BASE_SHA $HEAD_SHA | grep -E "(requirements\.txt|Dockerfile)"; then
          echo "rebuild=true" >> $GITHUB_OUTPUT
          echo "üîÑ Docker dependencies changed - full rebuild needed"
        else
          echo "rebuild=false" >> $GITHUB_OUTPUT
          echo "‚ö° Only code changed - using cached layers"
        fi
        
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/popco-recommend:latest
          ${{ secrets.DOCKER_USERNAME }}/popco-recommend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/popco-recommend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/popco-recommend:buildcache,mode=max
        
    # Ï∫êÏãú ÏµúÏ†ÅÌôî (Ï§ëÏöî!)
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy to EC2
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} << 'EOF'
            set -e
            echo "=== Popco-Recommended Î∞∞Ìè¨ ÏãúÏûë ==="
            cd ~/popco-recommend
            # .env ÌååÏùº ÌôïÏù∏
            if [ ! -f .env ]; then
              echo "ERROR: .env ÌååÏùºÏù¥ ÏóÜÏäµÎãàÎã§!"
              exit 1
            fi
            # Í∏∞Ï°¥ Ïª®ÌÖåÏù¥ÎÑà Ï§ëÏßÄ Î∞è Ï†úÍ±∞
            echo "1. Í∏∞Ï°¥ Ïª®ÌÖåÏù¥ÎÑà Ï§ëÏßÄ..."
            docker-compose -f docker-compose-prod.yml down
            # Ïù¥ÎØ∏ÏßÄ pull
            echo "2. ÏµúÏã† Ïù¥ÎØ∏ÏßÄ Í∞ÄÏ†∏Ïò§Í∏∞..."
            docker-compose -f docker-compose-prod.yml pull
            # Ïª®ÌÖåÏù¥ÎÑà ÏãúÏûë
            echo "3. ÏÉà Ïª®ÌÖåÏù¥ÎÑà ÏãúÏûë..."
            docker-compose -f docker-compose-prod.yml up -d
            # Ìó¨Ïä§Ï≤¥ÌÅ¨
            echo "4. ÏÑúÎπÑÏä§ ÏÉÅÌÉú ÌôïÏù∏..."
            sleep 10
            docker-compose -f docker-compose-prod.yml ps
            # Î°úÍ∑∏ ÌôïÏù∏
            echo "5. Ï¥àÍ∏∞ Î°úÍ∑∏ ÌôïÏù∏..."
            docker-compose -f docker-compose-prod.yml logs --tail=50
            echo "=== Î∞∞Ìè¨ ÏôÑÎ£å ==="
          EOF
      - name: Health Check
        run: |
          sleep 30
          echo "ÏÑúÎπÑÏä§ Ìó¨Ïä§Ï≤¥ÌÅ¨..."
  
          # Recommend ÏÑúÎπÑÏä§ Ï≤¥ÌÅ¨
          curl -f http://${{ secrets.SSH_HOST }}:8000/actuator/health || echo "Recommend ÏÑúÎπÑÏä§ Ìó¨Ïä§Ï≤¥ÌÅ¨ Ïã§Ìå®"